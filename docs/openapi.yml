openapi: 3.0.0
info:
  title: Axle API
  contact: {}
  version: "0.1"
servers:
  - description: Sandbox
    url: "https://sandbox.axle.insure"
  - description: Production
    url: "https://api.axle.insure"
    variables: {}
security:
  - ApiKeyAuth: []
paths:
  /ignition:
    post:
      summary: Start Ignition
      description:
        Generate an Ignition session. Returns an ignitionToken and ignitionUri to direct the user to
        share their insurance information. The ignition session will never expire.
      operationId: StartIgnition
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
        - $ref: "#/components/parameters/x-encrypted-data"
        - $ref: "#/components/parameters/x-access-token-optional"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              description: ""
              type: object
              properties:
                redirectUri:
                  type: string
                  description: The URI Ignition should direct the user to after authenticating successfully or exiting the Ignition session.
                webhookUri:
                  type: string
                  description: The URI Axle should send updates about this session or the resulting Account or Policy objects.
                user:
                  $ref: "#/components/schemas/User"
                metadata:
                  type: object
                  description: |-
                    Optional object to store ephemeral information about the session, such as `reservationTime`. Will be returned in webhook events.

                    ⚠️  The `metadata` field does not support nested objects. All keys must have values of type: `string`, `boolean`, `number`, or `array`.

                    ℹ️ `metadata` object can be used in policy validation templates as a dynamic rule input. For more info refer to the [Validation Templates Guide](/guides/policy-validation#example-template).
              required:
                - user
            example:
              redirectUri: "https://example.com/redirect"
              webhookUri: "https://example.com/webhook"
              user:
                id: "usr_123456789"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                description: ""
                type: object
                x-examples:
                  example-1:
                    success: true
                    data:
                      ignitionToken: "ign_d83jd7n2hd75jDh6E575x"
                      ignitionUri: "https://ignition.axle.insure/?token=ign_d83jd7n2hd75jDh6E575x"
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: object
                    required:
                      - ignitionUri
                      - ignitionToken
                    properties:
                      ignitionUri:
                        type: string
                        description: The URL that hosts the Ignition session. This URL can be navigated to in an iframe, webview, or a separate page. See [Initialize Ignition](/guides/initialize-ignition) for more details.
                      ignitionToken:
                        type: string
                        description: The unique ID for the Ignition session.
                required:
                  - success
                  - data
              example:
                success: true
                data:
                  ignitionToken: "ign_d83jd7n2hd75jDh6E575x"
                  ignitionUri: "https://ignition.axle.insure/?token=ign_d83jd7n2hd75jDh6E575x"
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Ignition
  /token/exchange:
    post:
      summary: Exchange Token
      description: |-
        Exchange an authorization code returned by an `ignition.completed` event for an access token. Follow the [Quickstart](/guides/quickstart) or see [Ignition Events](/guides/ignition-events) for more details.

        Auth codes are single-use and expire after 10 minutes, while accessTokens do not expire.
      operationId: ExchangeToken
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              description: ""
              type: object
              x-examples:
                example-1:
                  authCode: LGUgD5ZnqWy3pThdOLUsT
              properties:
                authCode:
                  type: string
                  description:
                    The authorization code obtained after a user successfully
                    connects their account via Ignition. Returned as a query
                    parameter at the redirectUri.
              required:
                - authCode
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                description: ""
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: object
                    required:
                      - accessToken
                      - account
                      - policies
                    properties:
                      accessToken:
                        type: string
                        description:
                          The token required for access to the requested
                          Account and Policy objects.
                      account:
                        type: string
                        description: The unique id for the Account object.
                      policies:
                        type: array
                        description: List of unique ids for the Policy objects. If Ignition is configured to select a single policy (as is the default), the list will only contain 1 item.
                        items:
                          type: string
                required:
                  - success
                  - data
        "400":
          $ref: "#/components/responses/InputValidation"
        "401":
          description: "The request is not authorized. See the error message for details."
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "The authCode provided is not authorized. Potential issues include: expiration of the authCode, formatting issues, or use of an invalid authCode."
        "403":
          description: "The client is not authorized to make this request. See the error message for details."
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "This authCode has already been exchanged. For security reasons, each authCode can only be exchanged once."
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Tokens
  /token/descope:
    post:
      summary: Descope Token
      description: |-
        Reduce scope for a specified access token. For example, de-scoping `monitoring` will disable Axle monitoring and you will no longer receive notifiations on Account or Policy events.
      operationId: DescopeToken
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
        - $ref: "#/components/parameters/x-access-token"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              description: ""
              type: object
              properties:
                scope:
                  type: string
                  description: Scope to descope from the access token.
                  enum:
                    - monitoring
              required:
                - scope
            example:
              scope: "monitoring"
        required: false
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                description: ""
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: object
                    required:
                      - accessToken
                    properties:
                      accessToken:
                        type: string
                        description: The token required for access to the requested Account and Policy objects.
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Tokens
  /accounts/{id}:
    get:
      summary: Get Account
      description:
        The Get Account endpoint will return an Account object including
        high-level account information (e.g., connection status) and any children objects
        (e.g., Policies) associated with the Account.

        Please note that this endpoint will NOT refresh the Account object with new data from the insurance carrier.
      operationId: GetAccount
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-access-token"
        - $ref: "#/components/parameters/x-destination-client-id"
        - $ref: "#/components/parameters/expand"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    $ref: "#/components/schemas/Account"
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Accounts
    parameters:
      - $ref: "#/components/parameters/account"
  /policies/{id}:
    get:
      summary: Get Policy
      description:
        The Get Policy endpoint returns a Policy object. Please refer to the [Policy](/api-reference/policies/policy) object for a detailed description of each field.

        Please note that this endpoint will NOT refresh the Policy object with new data from the insurance carrier.
      operationId: GetPolicy
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
        - $ref: "#/components/parameters/x-access-token"
        - $ref: "#/components/parameters/expand"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    $ref: "#/components/schemas/Policy"
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Policies
    parameters:
      - $ref: "#/components/parameters/policy"
  /policies/{id}/report:
    get:
      summary: Get Policy Report
      description: "The Get Policy Report endpoint returns a PDF or image report of the requested Policy object. Please refer to the [Policy](/api-reference/policies/policy) object for a detailed description of each field."
      operationId: GetPolicyReport
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
        - $ref: "#/components/parameters/x-access-token"
        - $ref: "#/components/parameters/expand"
        - $ref: "#/components/parameters/mode"
        - $ref: "#/components/parameters/format"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    $ref: "#/components/schemas/PolicyReport"
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Policies
    parameters:
      - $ref: "#/components/parameters/policy"
  /policies/{id}/validate:
    post:
      summary: Validate Policy
      description: "The Validate Policy endpoint returns the result of a evaluating a series of Rules against the requested policy object. For details about each Rule and their return types, see the [Policy Validation Guide](/guides/policy-validation)."
      operationId: ValidatePolicy
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
        - $ref: "#/components/parameters/x-access-token"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              type: array
              description: "A list of Rules to perform on the policy object."
              items:
                oneOf:
                  - $ref: "#/components/schemas/RuleWithNoInput"
                  - $ref: "#/components/schemas/RuleWithInput"
            example:
              [
                { "rule": "example-rule" },
                {
                  "rule": "example-rule-with-input",
                  "input": { "date": "2025-01-01" },
                },
              ]
        required: true
      responses:
        "200":
          "description": ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        description: "The overall status across all specified Rules."
                        enum:
                          - "pass"
                          - "fail"
                          - "caution"
                      summary:
                        type: object
                        description: "A summary of the Rule evaluation statuses."
                        properties:
                          example-rule:
                            $ref: "#/components/schemas/EvaluationStatus"
                            description: "The evaluation status of the example Rule."
                      rules:
                        type: object
                        description: "A detailed report of the Rule evaluation results."
                        properties:
                          example-rule:
                            type: object
                            description: ""
                            properties:
                              status:
                                $ref: "#/components/schemas/EvaluationStatus"
                              metadata:
                                type: object
                                description: "Additional metadata about the Rule."
                              message:
                                type: object
                                description: "An object containing the message code and human-readable message, if needed."
                              breakdown:
                                type: object
                                description: "Detail on contributing Rules, if needed."
                            required:
                              - status
                              - metadata
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
    parameters:
      - $ref: "#/components/parameters/policy"
  /policies/{id}/validate/{template}:
    post:
      summary: Validate Policy with Template
      description: "The Validate Policy endpoint returns the result of a evaluating a template of Rules against the requested policy object."
      operationId: ValidatePolicy
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
        - $ref: "#/components/parameters/x-access-token"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              type: object
              description: "Metadata that contains inputs required for Rule evaluation. Note: object must be flattened."
            example: { "customField": "2025-01-01" }
        required: true
      responses:
        "200":
          "description": ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        description: "The overall status across all specified Rules."
                        enum:
                          - "pass"
                          - "fail"
                          - "caution"
                      summary:
                        type: object
                        description: "A summary of the Rule evaluation statuses."
                        properties:
                          example-rule:
                            $ref: "#/components/schemas/EvaluationStatus"
                            description: "The evaluation status of the example Rule."
                      rules:
                        type: object
                        description: "A detailed report of the Rule evaluation results."
                        properties:
                          example-rule:
                            type: object
                            description: ""
                            properties:
                              status:
                                $ref: "#/components/schemas/EvaluationStatus"
                              metadata:
                                type: object
                                description: "Additional metadata about the Rule."
                              message:
                                type: object
                                description: "An object containing the message code and human-readable message, if needed."
                              breakdown:
                                type: object
                                description: "Detail on contributing Rules, if needed."
                            required:
                              - status
                              - metadata
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
    parameters:
      - $ref: "#/components/parameters/policy"
      - $ref: "#/components/parameters/template"
  /carriers/{id}:
    get:
      summary: Get Carrier
      description: |-
        The Get Carrier endpoint returns a Carrier object that include additional details (such as image) about an Axle-supported insurance carrier.

        **Note**: this is only available for carriers that are listed on Account or Policy objects that are generated via Ignition result=`link`.
      operationId: GetCarrier
      parameters:
        - $ref: "#/components/parameters/x-client-id"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    $ref: "#/components/schemas/Carrier"
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Carriers
    parameters:
      - $ref: "#/components/parameters/carrier"
  /carriers:
    get:
      summary: Get Carriers
      description: The Get Carriers endpoint returns an array of Carrier objects which include additional details about Axle-supported insurance carriers.
      operationId: GetCarriers
      parameters:
        - $ref: "#/components/parameters/x-client-id"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Carrier"
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Carriers
  /configs/validation:
    get:
      summary: Get Validation Config
      description: |-
        Get the Policy Validation configuration for your client or on behalf of a destination client.
      operationId: GetValidationConfig
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: array
                    description: List of Validation Templates for client.
                    items:
                      $ref: "#/components/schemas/ValidationConfig"
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Clients
  /platform/clients:
    get:
      summary: Get Clients
      description: |-
        Get a list of destination clients associated with your platform client. This request will return a list of destination client `id`s that you can use to make requests to the Axle API on behalf of your destination clients.

        See the [Axle for Platforms](/guides/platform-integration) guide for more information on how to use this endpoint and the destination client `id`.
      operationId: GetDestinationClients
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/expand"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: array
                    description: A list of identifiers for the destination clients associated with your credential, or if `expand=true`, a list of the destination client `id` and `entity` fields.
                    items:
                      oneOf:
                        - type: string
                        - $ref: "#/components/schemas/DestinationClient"
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Clients
    post:
      summary: Create Client
      description: |-
        Create a destination client associated with your platform client. This request will return a destination client `id` that you can use to make requests to the Axle API on behalf of your destination clients.

        See the [Axle for Platforms](/guides/platform-integration) guide for more information on how to use this endpoint and the destination client `id`.
      operationId: CreateDestinationClient
      parameters:
        - $ref: "#/components/parameters/x-client-id"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              description: ""
              type: object
              properties:
                displayName:
                  type: string
                  description: The name of the destination client to display to users (e.g., Honda of Pawnee).
                entity:
                  $ref: "#/components/schemas/ClientEntity"
              required:
                - "displayName"
                - "entity"
            example:
              displayName: "Honda of Pawnee"
              entity: "superPlatform-honda-of-pawnee"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                description: ""
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        description: The client ID of the destination client. You'll use this to make requests to the Axle API on behalf of your destination client.
                required:
                  - success
                  - data
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Clients
  /sandbox/accounts/{id}/event:
    post:
      summary: Trigger Account event
      description: |-
        The Account event will be sent to the `webhookUri` specified when generating an Ignition token. 

        Refer to the [Sandbox](/guides/sandbox) guide for more details.
      operationId: MonitoringNotifications
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
        - $ref: "#/components/parameters/x-access-token"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              description: "The Account object fields you would like to change. For list of all possible fields refer to [Account](/api-reference/accounts/account)"
              type: object
              $ref: "#/components/schemas/AccountSandbox"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                description: ""
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: object
                required:
                  - success
                  - data
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Sandbox
    parameters:
      - $ref: "#/components/parameters/account"
  /sandbox/policies/{id}/event:
    post:
      summary: Trigger Policy event
      description: |-
        The Policy event will be sent to the `webhookUri` specified when generating an Ignition token. 

        Refer to the [Sandbox](/guides/sandbox) guide for more details.
      operationId: MonitoringNotifications
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
        - $ref: "#/components/parameters/x-access-token"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              description: "The Policy object fields you would like to change. For list of all possible fields refer to [Policy](/api-reference/policies/policy)"
              type: object
              $ref: "#/components/schemas/PolicySandbox"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                description: ""
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
                  data:
                    type: object
                required:
                  - success
                  - data
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Sandbox
    parameters:
      - $ref: "#/components/parameters/policy"
  /ignition/{ignitionToken}/proxy:
    post:
      summary: Proxy Ignition
      description:
        "Proxy insurance information on behalf of your user to Axle for processing and/or verification. This endpoint should ONLY be used when insurance information is gathered when the user is not present (such as a document received from an insurance carrier via mail).
        \n For more details on supported operations, see the [Proxy Ignition](/guides/proxy-ignition) guide."
      operationId: ProxyIgnition
      parameters:
        - $ref: "#/components/parameters/x-client-id"
        - $ref: "#/components/parameters/x-destination-client-id"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              description: ""
              type: object
              properties:
                operation:
                  type: string
                  description: The proxy operation to be completed.
                  enum:
                    - process-document
                input:
                  type: object
                  description: The input provided will be unique to the proxy type specified.
        required: true
      responses:
        "200":
          description: "The insurance information was received and Axle has successfully begun processing the information."
          content:
            application/json:
              schema:
                description: ""
                type: object
                properties:
                  success:
                    $ref: "#/components/schemas/Success"
        "400":
          $ref: "#/components/responses/InputValidation"
        "429":
          $ref: "#/components/responses/TooManyRequests"
      deprecated: false
      tags:
        - Ignition
    parameters:
      - $ref: "#/components/parameters/ignitionToken"

components:
  schemas:
    Account:
      title: Account
      type: object
      description: An Account represents an account with an insurance carrier and includes high-level account information (e.g. name) and any Policy objects associated with the Account.
      x-examples:
        example:
          id: acc_gM2wn_gaqUv76ZljeVXOv
          firstName: John
          lastName: Smith
          email: john.smith@grr.la
          carrier: state-farm
          policies:
            - pol_CbxGmGWnp9bGAFCC-eod2
          connection:
            status: "active"
            updatedAt: "2022-01-01T00:00:00.000Z"
          createdAt: "2022-01-01T00:00:00.000Z"
          modifiedAt: "2022-01-01T00:00:00.000Z"
          refreshedAt: "2022-01-01T00:00:00.000Z"
      x-tags:
        - Accounts
      properties:
        id:
          type: string
          description: Unique identifier for the Account object.
        carrier:
          type: string
          description: Insurance carrier that is the source for the Account data.
        firstName:
          type: string
          description: First name of insurance account owner.
          nullable: true
        lastName:
          type: string
          description: Last name of insurance account owner.
          nullable: true
        phone:
          type: string
          description: Primary phone number of insurance account owner.
          nullable: true
        email:
          type: string
          description: Primary email address of insurance account owner.
          nullable: true
        policies:
          type: array
          description: List of unique identifiers of Policy objects associated with the Account, or if `expand=true`, list of Policy objects.
          items:
            oneOf:
              - type: string
              - $ref: "#/components/schemas/Policy"
        connection:
          $ref: "#/components/schemas/Connection"
        createdAt:
          type: string
          description: ISO 8601 timestamp at which the Account object was generated via Axle.
        modifiedAt:
          type: string
          description: ISO 8601 timestamp at which the Account object was modified via Axle. The Account object is modified only when there are differences between the current Account and new Account data requested from the carrier.
        refreshedAt:
          type: string
          description: ISO 8601 timestamp at which the Account object was refreshed via Axle. The Account object is refreshed only when Axle successfully requests new Account data from the insurance carrier.
      required:
        - id
        - carrier
        - firstName
        - lastName
        - email
        - phone
        - policies
        - connection
        - createdAt
        - modifiedAt
        - refreshedAt
    AccountSandbox:
      title: Account
      type: object
      description: An Account object where all the fields are not required. This object is used in Trigger Account Event that allows testing of Axle monitoring events.
      x-examples:
        example:
          firstName: John
          lastName: Smith
          email: john.smith@grr.la
          carrier: state-farm
          phone: +14045551234
          connection:
            status: "active"
      x-tags:
        - Accounts
      properties:
        carrier:
          type: string
          description: Insurance carrier that is the source for the Account data.
        firstName:
          type: string
          description: First name of insurance account owner.
          nullable: true
        lastName:
          type: string
          description: Last name of insurance account owner.
          nullable: true
        phone:
          type: string
          description: Primary phone number of insurance account owner.
          nullable: true
        email:
          type: string
          description: Primary email address of insurance account owner.
          nullable: true
        connection:
          $ref: "#/components/schemas/ConnectionSandbox"
    Policy:
      title: Policy
      type: object
      description: A Policy represents a specific policy associated with an
        Account and includes high-level policy information (e.g. policy number)
        and any children objects (e.g., coverages) associated with the policy.
      x-tags:
        - Accounts
      properties:
        id:
          type: string
          description: Unique identifier for the Policy object.
          example: "pol_CbxGmGWnp9bGAFCC-eod2"
        account:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/Account"
          description: Unique identifier for the Account object associated with the Policy, or if `expand=true`, the Account object.
          example: "acc_gM2wn_gaqUv76ZljeVXOv"
        type:
          type: string
          description: Type of insurance policy that the Policy object represents.
          nullable: true
          enum:
            - auto
            - motorcycle
            - home
            - condo
            - flood
          example: "auto"
        carrier:
          type: string
          description: Insurance carrier that is the source for the Policy data.
          example: "state-farm"
        policyNumber:
          type: string
          nullable: true
          description: Identifier of the policy, as specified by the insurance carrier.
          example: "123456789"
        isActive:
          type: boolean
          nullable: true
          description: Active status of the policy, as specified by the insurance carrier. If an Ignition session is completed with result `manual`, this field will be undefined.
          example: true
        effectiveDate:
          type: string
          nullable: true
          description: ISO 8601 timestamp of current term effective date of the policy, as specified by the insurance carrier.
          example: "2022-10-22T04:00:00.000Z"
        expirationDate:
          type: string
          nullable: true
          description: ISO 8601 timestamp of current term expiration date of the policy, as specified by the insurance carrier.
          example: "2023-10-22T04:00:00.000Z"
        premium:
          type: number
          nullable: true
          description: "Total policy premium, as specified by the insurance carrier. *Note: only available for `type=home,condo` policies*"
          example: 999.99
        address:
          description: Primary address associated with the policy.
          $ref: "#/components/schemas/Address"
        coverages:
          type: array
          description: List of coverage types and levels offered by the policy.
          items:
            $ref: "#/components/schemas/Coverage"
          example:
            - code: BI
              label: Bodily Injury
              limitPerPerson: 250000
              limitPerAccident: 500000
            - code: PD
              label: Property Damage
              limitPerAccident: 100000
            - code: COMP
              label: Comprehensive
              deductible: 375
              property: prp_uSdzLVpi8c76H7kl6AQ-F
            - code: COLL
              label: Collision
              deductible: 375
              property: prp_uSdzLVpi8c76H7kl6AQ-F
            - code: UMBI
              label: Uninsured Bodily Injury
              limitPerPerson: 100000
              limitPerAccident: 300000
              property: prp_uSdzLVpi8c76H7kl6AQ-F
        properties:
          type: array
          description: List of properties (such as a vehicle or dwelling) afforded coverage by the policy.
          items:
            $ref: "#/components/schemas/Property"
        insureds:
          type: array
          description: List of entities (such as an individuals or businesses) afforded direct coverage by the policy.
          items:
            $ref: "#/components/schemas/Insured"
        thirdParties:
          type: array
          description: List of external parties with interest in the policy.
          items:
            $ref: "#/components/schemas/ThirdParty"
        documents:
          type: array
          description: List of documents (such as declaration pages and policy agreements) associated with the policy.
          items:
            $ref: "#/components/schemas/Document"
        createdAt:
          type: string
          description: ISO 8601 timestamp at which the Policy object was generated via Axle.
          example: "2022-01-01T00:00:00.000Z"
        modifiedAt:
          type: string
          description: ISO 8601 timestamp at which the Policy object was modified via Axle. The Policy object is modified only when there are differences between the current Policy and new Policy data requested from the carrier.
          example: "2022-01-01T00:00:00.000Z"
        refreshedAt:
          type: string
          description: ISO 8601 timestamp at which the Policy object was refreshed via Axle. The Policy object is refreshed only when Axle successfully requests new Policy data from the carrier.
          example: "2022-01-01T00:00:00.000Z"
      required:
        - id
        - account
        - type
        - carrier
        - policyNumber
        - effectiveDate
        - expirationDate
        - premium
        - address
        - coverages
        - properties
        - insureds
        - thirdParties
        - documents
        - createdAt
        - modifiedAt
        - refreshedAt
    PolicySandbox:
      title: Policy
      type: object
      description: A Policy object where all of the fields are not required. This object is used in Trigger Policy Event that allows testing of Axle monitoring events.
      x-tags:
        - Accounts
      properties:
        type:
          type: string
          description: Type of insurance policy that the Policy object represents.
          nullable: true
          enum:
            - auto
            - motorcycle
            - home
            - condo
          example: "auto"
        carrier:
          type: string
          description: Insurance carrier that is the source for the Policy data.
          example: "state-farm"
        policyNumber:
          type: string
          nullable: true
          description: Identifier of the policy, as specified by the insurance carrier.
          example: "123456789"
        isActive:
          type: boolean
          nullable: true
          description: Active status of the policy, as specified by the insurance carrier. If an Ignition session is completed with result `manual`, this field will be undefined.
          example: true
        effectiveDate:
          type: string
          nullable: true
          description: ISO 8601 timestamp of current term effective date of the policy, as specified by the insurance carrier.
          example: "2022-10-22T04:00:00.000Z"
        expirationDate:
          type: string
          nullable: true
          description: ISO 8601 timestamp of current term expiration date of the policy, as specified by the insurance carrier.
          example: "2023-10-22T04:00:00.000Z"
        premium:
          type: number
          nullable: true
          description: "Total policy premium, as specified by the insurance carrier. *Note: only available for `type=home` policies*"
          example: 999.99
        address:
          description: Primary address associated with the policy.
          $ref: "#/components/schemas/Address"
        coverages:
          type: array
          description: List of coverage types and levels offered by the policy.
          items:
            $ref: "#/components/schemas/Coverage"
          example:
            - code: BI
              label: Bodily Injury
              limitPerPerson: 250000
              limitPerAccident: 500000
              property: prp_uSdzLVpi8c76H7kl6AQ-F
            - code: PD
              label: Property Damage
              limitPerAccident: 100000
              property: prp_uSdzLVpi8c76H7kl6AQ-F
            - code: COMP
              label: Comprehensive
              deductible: 375
              property: prp_uSdzLVpi8c76H7kl6AQ-F
            - code: COLL
              label: Collision
              deductible: 375
              property: prp_uSdzLVpi8c76H7kl6AQ-F
            - code: UMBI
              label: Uninsured Bodily Injury
              limitPerPerson: 100000
              limitPerAccident: 300000
              property: prp_uSdzLVpi8c76H7kl6AQ-F
        properties:
          type: array
          description: List of properties (such as a vehicle or dwelling) afforded coverage by the policy.
          items:
            $ref: "#/components/schemas/Property"
        insureds:
          type: array
          description: List of entities (such as an individuals or businesses) afforded direct coverage by the policy.
          items:
            $ref: "#/components/schemas/Insured"
        thirdParties:
          type: array
          description: List of external parties with interest in the policy.
          items:
            $ref: "#/components/schemas/ThirdParty"
        documents:
          type: array
          description: List of documents (such as declaration pages and policy agreements) associated with the policy.
          items:
            $ref: "#/components/schemas/Document"
    PolicyReport:
      title: Policy Report
      type: object
      example:
        report: "https://axle-labs-policy-reports..."
        policy: "pol_123456789"
      x-internal: false
      properties:
        report:
          type: string
          description: If `mode=url`, signed URL. Note, the URL has an expiry of 60 minutes. If `mode=base64`, base64 encoded string.
        policy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/Policy"
          description: Unique identifier for the Policy object, or if `expand=true`, Policy object.
      required:
        - report
        - policy
    Address:
      title: Address
      type: object
      example:
        addressLine1: 123 Fake St.
        addressLine2: Unit 456
        city: Atlanta
        state: Georgia
        postalCode: "30315"
        country: USA
      x-internal: false
      properties:
        addressLine1:
          type: string
          nullable: true
        addressLine2:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
    Carrier:
      title: Carrier
      type: object
      x-examples:
        example-1:
          id: "state-farm"
          name: "State Farm"
          domain: "www.statefarm.com"
          address:
            addressLine1: "One State Farm Plaza"
            addressLine2: null
            city: "Bloomington"
            state: "IL"
            postalCode: "61710"
            country: null
          phone: "+18007828332"
          logoUrl: "https://example.com/state-farm.svg"
          modifiedAt: "2023-04-04T19:27:55.523Z"
      x-internal: false
      properties:
        id:
          type: string
        name:
          type: string
        domain:
          type: string
        address:
          $ref: "#/components/schemas/Address"
        phone:
          type: string
        logoUrl:
          type: string
        modifiedAt:
          type: string
      required:
        - id
        - name
        - domain
        - address
        - phone
        - modifiedAt
    Coverage:
      title: Coverage
      type: object
      example:
        code: BI
        label: Bodily Injury
        limitPerPerson: 250000
        limitPerAccident: 500000
      x-internal: false
      properties:
        code:
          oneOf:
            - type: string
              title: Auto Coverages
              enum:
                - BI
                - PD
                - UMBI
                - UMPD
                - UIMBI
                - UIMPD
                - UUIMBI
                - UUIMPD
                - COLL
                - COMP
            - type: string
              title: Home Coverages
              enum:
                - DW
                - OS
                - PP
                - LOU
                - PL
                - MED
        label:
          type: string
        limitPerPerson:
          type: number
          nullable: true
        limitPerAccident:
          type: number
          nullable: true
        deductible:
          type: number
          nullable: true
        property:
          type: string
          nullable: true
          description: Unique identifier of Property afforded coverage. If specified coverage is afforded to all properties on the policy, property will be undefined.
      required:
        - code
        - label
    Property:
      title: Property
      type: object
      example:
        id: prp_uSdzLVpi8c76H7kl6AQ-F
        type: vehicle
        data:
          vin: SMTD44GN3HT812287
          model: CR-V
          year: "2017"
          make: HONDA
          use: "pleasure"
      x-internal: false
      properties:
        id:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
          enum:
            - vehicle
            - dwelling
        data:
          oneOf:
            - $ref: "#/components/schemas/Dwelling"
            - $ref: "#/components/schemas/Vehicle"
      required:
        - id
        - type
        - data
    Dwelling:
      title: Dwelling
      type: object
      example:
        addressLine1: 123 Fake St.
        addressLine2: Unit 456
        city: Atlanta
        state: Georgia
        postalCode: "30315"
        country: USA
      x-internal: false
      properties:
        addressLine1:
          type: string
          nullable: true
        addressLine2:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
    Vehicle:
      title: Vehicle
      type: object
      example:
        bodyStyle: null
        vin: SMTD44GN3HT812287
        model: CR-V
        year: "2017"
        make: HONDA
        use: "pleasure"
      x-internal: false
      properties:
        bodyStyle:
          type: string
          nullable: true
        vin:
          type: string
          nullable: true
        model:
          type: string
          nullable: true
        year:
          type: string
          nullable: true
        make:
          type: string
          nullable: true
        use:
          type: string
          nullable: true
          enum:
            - pleasure
            - commute
            - business
            - farm
      required:
        - vin
        - model
        - year
        - make
    Insured:
      title: Insured
      type: object
      example:
        firstName: Armaan
        lastName: Sikand
        dateOfBirthYear: "1993"
        licenseNo: •••••7259
        licenseState: GA
        dateOfBirth: null
        type: primary
      x-internal: false
      properties:
        type:
          type: string
          nullable: true
          description: Should be used for display purposes only. All listed insureds are afforded coverage by the policy.
          enum:
            - primary
            - secondary
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        dateOfBirthYear:
          type: string
          nullable: true
        licenseNo:
          type: string
          nullable: true
        licenseState:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          nullable: true
        property:
          type: string
          nullable: true
          description: Unique identifier of Property afforded coverage for specified Insured. If Insured is afforded coverage across all properties on the policy, property will be undefined.
      required:
        - firstName
        - lastName
        - type
        - dateOfBirth
        - dateOfBirthYear
        - licenseNo
        - licenseState
    ThirdParty:
      title: Third Party
      type: object
      example:
        name: "Super Leasing Trust"
        type: "lessor"
        address:
          addressLine1: "Po Box 105205"
          state: "GA"
          city: "Atlanta"
          postalCode: "30348"
      x-internal: false
      properties:
        property:
          type: string
          nullable: true
          default: Unique identifier of Property afforded coverage for specified Third Party.
        type:
          type: string
          enum:
            - lienholder
            - lessor
            - interest
          nullable: true
          description: Should be used for display purposes only. All listed thirdParties have established financial interest in the associated property.
        name:
          type: string
          nullable: true
        address:
          $ref: "#/components/schemas/Address"
      required:
        - type
        - name
        - address
    Document:
      title: Document
      type: object
      example:
        source: "carrier"
        name: "Declaration Page"
        type:
          - "declaration-page"
        url: "<signed-url>"
        id: "doc_jd73dw6fn02sj28.pdf"
        issuedDate: "2022-01-01T00:00:00.000Z"
        effectiveDate: "2022-01-02T00:00:00.000Z"
        createdAt: "2022-01-01T00:00:00.000Z"
      properties:
        source:
          type: string
          description: The source of the document. Note, user documents are unverified by Axle.
          enum:
            - carrier
            - user
        name:
          type: string
          description: Name of the document, as specified by carrier or user.
        type:
          type: array
          description: The type of information contained in the document, as specified by carrier or user. A document may have multiple types.
          items:
            type: string
            enum:
              - declaration-page
              - id-card
              - policy-agreement
        url:
          type: string
          description: URL for document access. Note, the URL is signed and has an expiry of 60 minutes.
        issuedDate:
          type: string
          description: If available, ISO 8601 timestamp at which the document was generated or issued by the carrier.
        effectiveDate:
          type: string
          description: If available, ISO 8601 timestamp at which the document becomes active or goes into effect.
        createdAt:
          type: string
          description: ISO 8601 timestamp at which the document was fetched or shared via Axle.
        id:
          type: string
          description: Unique identifier (formatted as filename) for the document.
      required:
        - source
        - name
        - url
        - createdAt
    User:
      title: User
      type: object
      x-examples:
        example:
          id: "usr_foqnkvhwerq7h81"
          firstName: "John"
          lastName: "Smith"
          email: "john@smith.com"
      description: |-
        User to attach to Ignition session. This object is used to identify the user that is associated with the Ignition session, enabling consolidated metrics, easy matching for webhook events, and upcoming features.
      properties:
        id:
          type: string
          description: Your application's unique, public user id. If a public id is not available, it is recommended to encrypt any unique user identifier (e.g., email or username) to create a public id.
        firstName:
          type: string
          description: User's first name.
        lastName:
          type: string
          description: User's last name.
        email:
          type: string
          description: User's email address.
        phone:
          type: string
          description: User's phone number in E.164 format.
      required:
        - "id"
    Success:
      title: Success
      type: boolean
      description: Indicates whether the operation was performed successfully.
      x-internal: false
      example: true
    Connection:
      title: Connection
      type: object
      x-internal: false
      properties:
        status:
          type: string
          description: The Account connection status represents if Axle can actively request new Account and Policy data from the insurance carrier.
          enum:
            - active
            - credentials-expired
            - mfa-expired
            - account-disabled
            - account-inaccessible
        updatedAt:
          type: string
          description: ISO 8601 timestamp at which the Account connection status was updated.
    ConnectionSandbox:
      title: Connection
      type: object
      x-internal: false
      properties:
        status:
          type: string
          description: The Account connection status represents if Axle can actively request new Account and Policy data from the insurance carrier. The ConnectionSandbox schema doesn't have updatedAt attribute
          enum:
            - active
            - credentials-expired
            - mfa-expired
            - account-disabled
            - account-inaccessible
    EvaluationStatus:
      title: EvaluationStatus
      type: string
      description: Indicates whether the rule evaluations were successful.
      enum:
        - pass
        - fail
        - caution
        - unknown
    EvaluationStatusWithoutCaution:
      title: EvaluationStatusWithoutCaution
      type: string
      description: Indicates whether the rule evaluations were successful.
      enum:
        - pass
        - fail
        - unknown
    RuleWithInput:
      title: Rule With Input
      type: object
      properties:
        rule:
          type: string
          enum:
            - "collision-coverage-meets-requirements"
            - "comprehensive-coverage-meets-requirements"
            - "bodily-injury-coverage-meets-requirements"
            - "property-damage-coverage-meets-requirements"
            - "uninsured-underinsured-bi-coverage-meets-requirements"
            - "uninsured-underinsured-pd-coverage-meets-requirements"
            - "expiration-date-comparison"
            - "insureds-match"
            - "properties-match"
            - "address-match"
            - "required-policy-information-is-present"
            - "vehicle-use-meets-requirements"
            - "third-party-matches"
        input:
          type: object
          description: Additional input to evaluate the rule. See [Supported Rules](/guides/policy-validation#supported-rules) for details on which Rules require additional input.
      required:
        - rule
    RuleWithNoInput:
      title: Rule With No Input
      type: object
      properties:
        rule:
          type: string
          enum:
            - "policy-active"
            - "rental-covered-for-collision"
      required:
        - rule
    RuleTemplateWithNoInput:
      title: Rule With No Input
      type: object
      properties:
        rule:
          type: string
          enum:
            - "policy-active"
            - "rental-covered-for-collision"
      required:
        - rule
    RuleTemplateWithInput:
      title: Rule With Input
      type: object
      properties:
        rule:
          type: string
          enum:
            - "collision-coverage-meets-requirements"
            - "comprehensive-coverage-meets-requirements"
            - "bodily-injury-coverage-meets-requirements"
            - "property-damage-coverage-meets-requirements"
            - "uninsured-underinsured-bi-coverage-meets-requirements"
            - "uninsured-underinsured-pd-coverage-meets-requirements"
            - "expiration-date-comparison"
            - "insureds-match"
            - "properties-match"
            - "address-match"
            - "required-policy-information-is-present"
            - "vehicle-use-meets-requirements"
            - "third-party-matches"
        input:
          type: object
          description: Input configuration to evaluate the rule. See [Supported Rules](/guides/policy-validation#supported-rules) for details on which Rules require additional input.
          properties:
            inputKey:
              type: object
              description: The inputKey is the key corresponding to the Rule input, e.g., "vin" or "deductible".
              properties:
                source:
                  type: string
                  description: The source key of the input value send via Ignition metadata or in the [Validate Policy with Template](/api-reference/policies/validate-policy-template) request body.
                default:
                  oneOf:
                    - type: string
                    - type: number
                    - type: boolean
                    - type: array
                  description: The default value of the input key if not provided in the Ignition metadata or in the [Validate Policy with Template](/api-reference/policies/validate-policy-template) request body.
              required:
                - source
      required:
        - rule
        - input
    ClientEntity:
      title: ClientEntity
      type: string
      description: |-
        A standardized entity name for the destination client using all lowercase, and dashes instead of spaces. For example, `yourPlatform-${yourCustomerId}`. Entity names must be unique across all destination clients, and you will recieve a 409 response with a clear status message if the entity name has already been taken.

        **Note:** Please keep in mind that the entity name may be public to your Ignition users, so it should not contain any sensitive information.
    DestinationClient:
      title: DestinationClient
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the destination client. You'll use this to make requests to the Axle API on behalf of your destination client.
        entity:
          $ref: "#/components/schemas/ClientEntity"
      required:
        - id
        - entity
    ValidationConfig:
      title: ValidationConfig
      type: object
      properties:
        id:
          type: string
          description: The unqiue identifier of the Validation template. You'll use this to make requests to the [Validate Policy with Template](/api-reference/policies/validate-policy-template) endpoint.
        createdAt:
          type: string
          description: ISO 8601 timestamp at which the Validation template was created.
        modifiedAt:
          type: string
          description: ISO 8601 timestamp at which the Validation template was last modified.
        rules:
          type: array
          description: List of rules to be evaluated against the Policy object.
          items:
            oneOf:
              - $ref: "#/components/schemas/RuleTemplateWithNoInput"
              - $ref: "#/components/schemas/RuleTemplateWithInput"
      required:
        - id
        - rules
        - createdAt
        - modifiedAt

  parameters:
    x-client-id:
      name: x-client-id
      in: header
      required: true
      schema:
        type: string
      description: Your client ID. This will be shared with you during onboarding.
    x-destination-client-id:
      name: x-destination-client-id
      in: header
      required: false
      schema:
        type: string
      description: The client ID of the destination client. This is optional and only used by platform clients. See the [Axle for Platforms](/guides/platform-integration) guide for more information.
    x-encrypted-data:
      name: x-encrypted-data
      in: header
      required: false
      schema:
        type: boolean
      description: |
        Set to *true* if you would like to send an encrypted base64 string as the request body, instead of a JSON string. The body must be encrypted using an Axle-provided public key with RSA_PKCS1_OAEP_PADDING and SHA256 hashing. Defaults to *false*.

        **Note** - If your client is configured to use the Ignition landing page to collect additional user information, the provided Ignition user and metadata can be accessed by the user that is sent a generated Ignition session.
    account:
      name: id
      in: path
      required: true
      schema:
        type: string
      description:
        The unique ID for the requested account. Returned as part of the Token
        Exchange flow in exchangeToken.
    ignitionToken:
      name: ignitionToken
      in: path
      required: true
      schema:
        type: string
      description: The unique ID for the Ignition session.
    x-access-token:
      name: x-access-token
      in: header
      required: true
      schema:
        type: string
      description: The access token required for access to the requested Account. Returned as part of [Exchange Token](/api-reference/tokens/exchange-token).
    x-access-token-optional:
      name: x-access-token
      in: header
      required: false
      schema:
        type: string
      description: Optionally provided to pre-authenticate a user that has previously shared insurance information via Axle and may be reconnecting the same insurance account. See [Monitoring](/guides/monitoring) for more details on usage. Returned as part of [Exchange Token](/api-reference/tokens/exchange-token).
    policy:
      name: id
      in: path
      required: true
      schema:
        type: string
      description:
        The unique ID for the requested policy. Returned by Get Account for each
        Policy associated with the Account.
    client:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: The unique ID for the requested client. Returned in Get Clients.
    template:
      name: template
      in: path
      required: true
      schema:
        type: string
      description: The unique ID of the Validation template.
    carrier:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: The unique ID for the requested carrier. Returned in Account and Policy objects as `carrier`.
    expand:
      name: expand
      in: query
      required: false
      schema:
        type: string
        enum:
          - "true"
          - "false"
      description: Set to `true` if you would like to expand related entities (e.g., account, policy, client). Defaults to `false`.
    mode:
      name: mode
      in: query
      required: false
      schema:
        type: string
        enum:
          - "url"
          - "base64"
      description: "Specify desired return mode of the report. Options: `url` for a signedUrl or `base64` for the full file returned in base64 encoding. Defaults to `url`."
    format:
      name: format
      in: query
      required: false
      schema:
        type: string
        enum:
          - "pdf"
          - "jpeg"
      description: "Specify desired return format of the report. Options: `pdf` or `jpeg`. Defaults to `pdf`."
  responses:
    InputValidation:
      description: "The request body is invalid. See the error message for details."
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "Input validation failed due to one or more missing or invalid parameters. Review the request and try again."
    TooManyRequests:
      description: "Rate limit exceeded. This is only to protect Axle systems against errant or abnormal request volume. The limit is sufficiently high for all normal usage."
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Too Many Requests"
            required:
              - message
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-client-secret
      description:
        Your secret API key. This will be shared with you during onboarding and should
        be considered sensitive - it’s a password after all! Your secret will be matched with your client ID to authenticate your requests.
